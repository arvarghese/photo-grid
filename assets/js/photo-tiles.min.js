/*
 * photo-tiles (https://github.com/arvarghese/photo-tiles)
 * Copyright 2016-2017 arun varghese
 */
var PhotoTiles={config:{initialized:!1,demoMode:!1,container:".photo-tiles-container",shouldPlay:!0,transition:2e3,timerId:0,photoListIndex:0,photoList:[]},initialize:function(e){return PhotoTiles.config.initialized?void console.info("PhotoTiles already initialized."):e?(PhotoTiles.config.container=e.selector||".photo-tiles-container",PhotoTiles.config.shouldPlay=e.shouldPlay||!0,PhotoTiles.config.transition=e.transition||2e3,PhotoTiles.config.photoList=e.photoList||[],PhotoTiles.config.demoMode=e.demoMode||!1,PhotoTiles.validateConfigs(e)?(e.demoMode&&(PhotoTiles.config.photoList=["assets/images/demo/demo-image-1.jpeg","assets/images/demo/demo-image-2.jpeg","assets/images/demo/demo-image-3.jpeg","assets/images/demo/demo-image-4.jpeg","assets/images/demo/demo-image-5.jpeg","assets/images/demo/demo-image-6.jpeg","assets/images/demo/demo-image-7.jpeg","assets/images/demo/demo-image-8.jpeg","assets/images/demo/demo-image-9.jpeg","assets/images/demo/demo-image-10.jpeg"]),PhotoTiles.buildTiles(),PhotoTiles.loadTiles(),PhotoTiles.loadEvents(),void(PhotoTiles.config.initialized=!0)):void console.info("PhotoTiles not initialized.")):void console.info("No configuration object was passed, checkout https://github.com/arvarghese/photo-tiles#customization for an example.")},validateConfigs:function(e){return document.querySelector(PhotoTiles.config.container)?!(0===PhotoTiles.config.photoList.length&&!PhotoTiles.config.demoMode)||(console.info("No photos specified, please initialize PhotoTiles with the attribute 'photoList' set to a list of photos."),!1):(console.info("No container specified or container doesn't exist on the page with selector '"+PhotoTiles.config.container+"'."),!1)},buildTiles:function(){var e=document.querySelector(PhotoTiles.config.container),o=document.createElement("div");o.className="photo-tiles";var t=document.createElement("div");t.className="photo-tiles-row";var i=document.createElement("div");i.className="photo-tiles-row",o.appendChild(t),o.appendChild(i),e.appendChild(o)},loadTiles:function(){Array.prototype.forEach.call(document.querySelectorAll(".photo-tiles-row"),function(e){var o,t,i,l;o=document.createElement("div"),o.className="photo left photo-lg",o.style.transform="translateX(0px)",o.style["background-image"]="url("+PhotoTiles.getNextPhoto()+")",e.appendChild(o),o=document.createElement("div"),o.className="photo middle photo-sm",i=document.createElement("div"),i.className="photo-sm-dual",l=document.createElement("div"),l.className="photo-sm-dual",o.appendChild(i),o.appendChild(l),e.appendChild(o),t=PhotoTiles.tileInfo.getLgWidth(),o.style.transform="translateX("+t+"px)",Array.prototype.forEach.call(o.children,function(e){e.style["background-image"]="url("+PhotoTiles.getNextPhoto()+")"}),o=document.createElement("div"),o.className="photo right photo-lg",t=PhotoTiles.tileInfo.getLgWidth()+PhotoTiles.tileInfo.getSmWidth(),o.style.transform="translateX("+t+"px)",o.style["background-image"]="url("+PhotoTiles.getNextPhoto()+")",e.appendChild(o)}),setTimeout(function(){Array.prototype.forEach.call(document.querySelectorAll(".photo"),function(e){e.classList.add("loaded")})},1e3)},loadEvents:function(){PhotoTiles.config.shouldPlay&&PhotoTiles.loadTimer();var e;window.addEventListener("resize",function(){Array.prototype.forEach.call(document.querySelectorAll(".photo-tiles-row"),function(o){e=o.querySelector(".left")&&o.querySelector(".left").classList.contains("photo-sm")?PhotoTiles.tileInfo.getSmWidth():PhotoTiles.tileInfo.getLgWidth(),o.querySelector(".middle").style.transform="translateX("+e+"px)",e=o.querySelector(".right")&&o.querySelector(".right").classList.contains("photo-sm")?2*PhotoTiles.tileInfo.getLgWidth():PhotoTiles.tileInfo.getSmWidth()+PhotoTiles.tileInfo.getLgWidth(),o.querySelector(".right").style.transform="translateX("+e+"px)"})}),PhotoTiles.loadKeyboardEvents()},loadTimer:function(){PhotoTiles.config.timerId=setInterval(function(){PhotoTiles.shiftPhotos()},PhotoTiles.config.transition)},tagRandomPhotoForRemoval:function(){var e=document.querySelectorAll(".photo:not(.remove)");e.length<2&&clearInterval(PhotoTiles.config.timerId);var o=e[Math.floor(Math.random()*e.length)];o.classList.contains("left")?o.style.transform+="translateX(-100%)":o.classList.contains("right")&&(o.style.transform+="translateX(100%)"),o.classList.contains("middle")&&(0===Array.prototype.indexOf.call(o.parentElement.parentElement.children,o.parentElement)?o.style.transform+="translateY(-100%)":o.style.transform+="translateY(100%)"),o.classList.add("remove")},shiftPhotos:function(){var e=PhotoTiles.getNextPhoto(),o=new Image;o.onload=function(){PhotoTiles.tagRandomPhotoForRemoval(),setTimeout(function(){PhotoTiles.adjustTiles(),PhotoTiles.addPhoto(e)},300)},o.src=e},addPhoto:function(e){Array.prototype.forEach.call(document.querySelectorAll(".photo-tiles-row"),function(o){if(3!==o.querySelectorAll(".photo").length){var t,i;if(o.querySelector(".photo-sm"))t=document.createElement("div"),t.className="photo right photo-lg",i=PhotoTiles.tileInfo.getSmWidth()+PhotoTiles.tileInfo.getLgWidth();else{t=document.createElement("div"),t.className="photo right photo-sm";var l=document.createElement("div");l.className="photo-sm-dual";var s=document.createElement("div");s.className="photo-sm-dual",t.appendChild(l),t.appendChild(s),i=2*PhotoTiles.tileInfo.getLgWidth()}o.appendChild(t);var n=window.innerWidth;t.classList.contains("photo-sm")?(t.style.transform="translateX("+n+"px)",Array.prototype.forEach.call(o.querySelectorAll(".photo-sm-dual"),function(o){e=PhotoTiles.getNextPhoto(),o.style["background-image"]="url("+e+")"})):(t.style.transition="0s",t.style.transform="translateX("+n+"px)",t.style["background-image"]="url("+e+")"),setTimeout(function(){t.style.transition=".5s ease-in-out",t.style.transform="translateX("+i+"px)",t.classList.add("loaded")},200)}})},adjustTiles:function(){var e,o;Array.prototype.forEach.call(document.querySelectorAll(".remove"),function(e){e.parentNode.removeChild(e)}),Array.prototype.forEach.call(document.querySelectorAll(".photo-tiles-row"),function(t){t.querySelector(".left")||(t.querySelector(".middle")?(o=t.querySelector(".middle"),o.style.transform="translateX(0px)",o.classList.remove("middle"),o.classList.add("left"),t.querySelector(".right")&&(e=t.querySelector(".left").offsetWidth,o=t.querySelector(".right"),o.style.transform="translateX("+e+"px)",o.classList.remove("right"),o.classList.add("middle"))):t.querySelector(".right")&&(t.querySelector(".right").style.transform="translateX(0px)")),t.querySelector(".middle")||t.querySelector(".right")&&(e=t.querySelector(".left").offsetWidth,o=t.querySelector(".right"),o.style.transform="translateX("+e+"px)",o.classList.remove("right"),o.classList.add("middle"))})},getNextPhoto:function(){return PhotoTiles.config.photoListIndex>=PhotoTiles.config.photoList.length&&(PhotoTiles.config.photoListIndex=0),PhotoTiles.config.photoList[PhotoTiles.config.photoListIndex++]},toggleExecution:function(){PhotoTiles.config.shouldPlay=!PhotoTiles.config.shouldPlay,PhotoTiles.config.shouldPlay?PhotoTiles.play():PhotoTiles.pause()},pause:function(){clearInterval(PhotoTiles.config.timerId)},play:function(){PhotoTiles.config.shouldPlay=!0,PhotoTiles.loadTimer()},tileInfo:{getLgWidth:function(){return document.querySelector(".photo-lg")?document.querySelector(".photo-lg").offsetWidth:0},getSmWidth:function(){return document.querySelector(".photo-sm")?document.querySelector(".photo-sm").offsetWidth:0}},loadKeyboardEvents:function(){document.onkeydown=function(e){switch(e.keyCode){case 32:PhotoTiles.toggleExecution()}}},reset:function(){if(!PhotoTiles.config.initialized)return void console.info("PhotoTiles cannot be reset as it has not been initialized yet.");clearInterval(PhotoTiles.config.timerId);var e=document.querySelector(PhotoTiles.config.container);Array.prototype.forEach.call(document.querySelectorAll(".photo"),function(e){PhotoTiles.tagRandomPhotoForRemoval()}),setTimeout(function(){Array.prototype.forEach.call(e.children,function(e){e.parentNode.removeChild(e)}),PhotoTiles.config={initialized:!1,demoMode:!1,container:"",shouldPlay:!0,transition:0,timerId:0,photoListIndex:0,photoList:[]}},1e3)}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
